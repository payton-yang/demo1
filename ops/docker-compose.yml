version: '3.4'
services:
  db:
    container_name: demo-db
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: U2RN82C46KD!
      PGDATA: /var/lib/postgresql/data/pgdata
      TZ: 'Asia/Shanghai'
    restart: always
    volumes:
      - './data.sql:/docker-entrypoint-initdb.d/init.sql'
      - 'postgres_data:/var/lib/postgresql/data/pgdata'
    ports:
      - "5432:5432"

  redis:
    restart: always
    image: redis:latest
    container_name: demo-redis
    command: redis-server --requirepass password
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:3.8-management
    container_name: demo-rabbitmq
    hostname: my_rabbit
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: always
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_VHOST: broker
      RABBITMQ_DEFAULT_USER: root
      RABBITMQ_DEFAULT_PASS: root
      RABBITMQ_LOGS: /var/lib/rabbitmq/rabbitmq.log
      RABBITMQ_SASL_LOGS: /var/lib/rabbitmq/rabbitmq-sasl.log
      RABBITMQ_ERLANG_COOKIE: LZJADKXKLULIXFKAALGX
      TZ: Asia/Shanghai
  nginx:
    container_name: demo-nginx
    image: nginx:latest
    restart: always
    ports:
      - "8001:80"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  api:
    container_name: demo-py38
    ports:
      - "8000:8000"
      - "9002:9001"
    depends_on:
      - rabbitmq
      - db
    build:
      context: ../
      dockerfile: ops/Dockerfile
    restart: always


volumes:
  postgres_data:
  rabbitmq_data:
